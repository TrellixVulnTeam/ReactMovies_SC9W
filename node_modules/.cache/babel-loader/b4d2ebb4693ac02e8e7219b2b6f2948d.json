{"ast":null,"code":"var _jsxFileName = \"/Users/tatianamiranda/Desktop/FinalAda/movies/src/components/SearchMovies.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchMovies = () => {\n  _s();\n\n  const params = useParams(\"\");\n  useEffect(search => {\n    fetch(`https://api.themoviedb.org/3/search/movie/?api_key=41514cf9c5004dbe47144dbf1928e39c&query=${params.movie}`).then(res => res.json()).then(data => {\n      console.log(data);\n    });\n  }, []); //             setMovies(data))\n  // }, [params.movie])\n  // useEffect(() => {\n  //     fetch(`https://api.themoviedb.org/3/search/movie/?api_key=41514cf9c5004dbe47144dbf1928e39c`)\n  //         .then(res => res.json())\n  //         .then(data => {\n  //             setMovies(data.results)\n  //         })\n  // }, [searchParams])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" \", movie.title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img\",\n          src: `https://image.tmdb.org/t/p/original/${movie.poster_path}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchMovies, \"oVl/CosACDqoQXSsHMBk26cu/Mw=\", false, function () {\n  return [useParams];\n});\n\n_c = SearchMovies;\nexport default SearchMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMovies\");","map":{"version":3,"sources":["/Users/tatianamiranda/Desktop/FinalAda/movies/src/components/SearchMovies.js"],"names":["useEffect","useState","useParams","SearchMovies","params","search","fetch","movie","then","res","json","data","console","log","movies","map","title","poster_path"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAKA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAMC,MAAM,GAAGF,SAAS,CAAC,EAAD,CAAxB;AAIAF,EAAAA,SAAS,CAAEK,MAAD,IAAY;AAClBC,IAAAA,KAAK,CAAE,6FAA4FF,MAAM,CAACG,KAAM,EAA3G,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,KAJL;AAMH,GAPQ,EAON,EAPM,CAAT,CALuB,CAavB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA,sBACI;AAAA,2BACI;AAAA,gBAEKG,MAAM,CAACC,GAAP,CAAYR,KAAD,iBAER;AAAA,gCACI;AAAA,0BAAMA,KAAK,CAACS,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAqB,UAAA,GAAG,EAAG,uCAAsCT,KAAK,CAACU,WAAY;AAAnF;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH;AAFL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA9CD;;GAAMd,Y;UACaD,S;;;KADbC,Y;AA+CN,eAAeA,YAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n\n\n\nconst SearchMovies = () => {\n    const params = useParams(\"\")\n\n\n\n    useEffect((search) => {\n        fetch(`https://api.themoviedb.org/3/search/movie/?api_key=41514cf9c5004dbe47144dbf1928e39c&query=${params.movie}`)\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n            })\n\n    }, [])\n    //             setMovies(data))\n    // }, [params.movie])\n\n    // useEffect(() => {\n    //     fetch(`https://api.themoviedb.org/3/search/movie/?api_key=41514cf9c5004dbe47144dbf1928e39c`)\n    //         .then(res => res.json())\n    //         .then(data => {\n    //             setMovies(data.results)\n    //         })\n    // }, [searchParams])\n\n\n\n\n\n    return (\n        <div>\n            <div>\n\n                {movies.map((movie) => (\n\n                    <div >\n                        <h1> {movie.title} </h1>\n                        <img className=\"img\" src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} />\n                    </div>\n                ))}\n\n            </div>\n        </div>\n\n    )\n\n\n}\nexport default SearchMovies"]},"metadata":{},"sourceType":"module"}