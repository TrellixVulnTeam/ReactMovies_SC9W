{"ast":null,"code":"var _jsxFileName = \"/Users/tatianamiranda/Desktop/FinalAda/movies/src/components/SearchMovies.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport \"./searchstyle.css\";\nimport CardItem from \"./CardItems\";\nimport { Pagination } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchMovies = () => {\n  _s();\n\n  const params = useParams(\"\");\n  const [page, setPage] = useState(1);\n  const [movies, setMovies] = useState([]);\n  const [totalPages, setTotalPages] = useState(1);\n\n  const handleChange = (event, value) => {\n    setPage(value);\n  };\n\n  useEffect(search => {\n    fetch(`https://api.themoviedb.org/3/search/movie/?api_key=41514cf9c5004dbe47144dbf1928e39c&query=${params.movie}&page=${page} `).then(res => res.json()).then(data => {\n      setMovies(data.results);\n      setTotalPages(data.total_pages);\n    });\n  }, [page]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popular\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(CardItem, {\n        title: movie.title,\n        img: `https://image.tmdb.org/t/p/w300/${movie.poster_path}`,\n        link: `/${movie.id}`\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      count: totalPages > 500 ? 500 : totalPages,\n      page: page,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchMovies, \"GyaC4hkjBP4Mwpokh9vABWupEaU=\", false, function () {\n  return [useParams];\n});\n\n_c = SearchMovies;\nexport default SearchMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMovies\");","map":{"version":3,"sources":["/Users/tatianamiranda/Desktop/FinalAda/movies/src/components/SearchMovies.js"],"names":["useEffect","useState","useParams","NavBar","CardItem","Pagination","SearchMovies","params","page","setPage","movies","setMovies","totalPages","setTotalPages","handleChange","event","value","search","fetch","movie","then","res","json","data","results","total_pages","map","title","poster_path","id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,mBAAP;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,UAAT,QAA2B,eAA3B;;;AAIA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAMC,MAAM,GAAGL,SAAS,CAAC,EAAD,CAAxB;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,CAAD,CAA5C;;AACA,QAAMa,YAAY,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACnCP,IAAAA,OAAO,CAACO,KAAD,CAAP;AACH,GAFD;;AAIAhB,EAAAA,SAAS,CAAEiB,MAAD,IAAY;AAClBC,IAAAA,KAAK,CAAE,6FAA4FX,MAAM,CAACY,KAAM,SAAQX,IAAK,GAAxH,CAAL,CACKY,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACVZ,MAAAA,SAAS,CAACY,IAAI,CAACC,OAAN,CAAT;AACAX,MAAAA,aAAa,CAACU,IAAI,CAACE,WAAN,CAAb;AACH,KALL;AAOH,GARQ,EAQN,CAACjB,IAAD,CARM,CAAT;AAUA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACKE,MAAM,CAACgB,GAAP,CAAWP,KAAK,iBACb,QAAC,QAAD;AACI,QAAA,KAAK,EAAEA,KAAK,CAACQ,KADjB;AAEI,QAAA,GAAG,EAAG,mCAAkCR,KAAK,CAACS,WAAY,EAF9D;AAGI,QAAA,IAAI,EAAG,IAAGT,KAAK,CAACU,EAAG;AAHvB,SAAeV,KAAK,CAACU,EAArB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAUI,QAAC,UAAD;AACI,MAAA,KAAK,EAAEjB,UAAU,GAAG,GAAb,GAAmB,GAAnB,GAAyBA,UADpC;AAEI,MAAA,IAAI,EAAEJ,IAFV;AAGI,MAAA,QAAQ,EAAEM;AAHd;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAvCD;;GAAMR,Y;UACaJ,S;;;KADbI,Y;AAwCN,eAAeA,YAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport \"./searchstyle.css\"\nimport CardItem from \"./CardItems\";\nimport { Pagination } from \"@mui/material\"\n\n\n\nconst SearchMovies = () => {\n    const params = useParams(\"\")\n    const [page, setPage] = useState(1);\n    const [movies, setMovies] = useState([])\n    const [totalPages, setTotalPages] = useState(1)\n    const handleChange = (event, value) => {\n        setPage(value);\n    };\n\n    useEffect((search) => {\n        fetch(`https://api.themoviedb.org/3/search/movie/?api_key=41514cf9c5004dbe47144dbf1928e39c&query=${params.movie}&page=${page} `)\n            .then(res => res.json())\n            .then(data => {\n                setMovies(data.results)\n                setTotalPages(data.total_pages)\n            })\n\n    }, [page])\n\n    return (\n        <div>\n            <NavBar />\n            <div className=\"popular\">\n                {movies.map(movie => (\n                    <CardItem key={movie.id}\n                        title={movie.title}\n                        img={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n                        link={`/${movie.id}`} />\n                ))}\n            </div>\n            <Pagination\n                count={totalPages > 500 ? 500 : totalPages}\n                page={page}\n                onChange={handleChange}\n            />\n        </div>\n    )\n\n\n}\nexport default SearchMovies\n\n\n"]},"metadata":{},"sourceType":"module"}